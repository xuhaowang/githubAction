{"version":3,"sources":["containers/TagPost/actions.js","containers/TagPost/index.js"],"names":["fetchPostInfo","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","postInfo","wrap","_context","prev","next","getPostInfo","sent","type","at","data","stop","_x","apply","this","arguments","setTagName","tagName","message","fetchTagPostList","perPage","page","_ref2","_callee2","postList","_context2","fetchPostByTag","_x2","TagPost","_Component","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","key","value","tagPostActions","match","params","_loadPage","prevProps","oldTag","newTag","pageNum","_this2","_this$props$tagPost$t","tagPost","toJS","_this$props$tagPost$t2","postCount","tagInfo","loadMore","navList","linkTo","tag","concat","toConsumableArray","loadMoreBtn","react_default","createElement","es_button","size","className","onClick","SideBar","siteConfig","Header","activeTag","Grid","fluid","Row","PostList","goHome","Component","connect","bindActionCreators","TagPostActions"],"mappings":"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","file":"static/js/4.32670ec5.chunk.js","sourcesContent":["import * as at from './actionTypes';\nimport { getPostInfo, fetchPostByTag } from 'posts';\n\nexport const fetchPostInfo = () => async dispatch => {\n  const postInfo = await getPostInfo();\n  dispatch({\n    type: at.GET_POST_INFO,\n    data: postInfo,\n  });\n};\n\nexport const setTagName = tagName => ({\n  type: at.SET_TAG_NAME,\n  message: tagName,\n});\n\nexport const fetchTagPostList = (tagName, perPage, page) => async dispatch => {\n  const postList = await fetchPostByTag(tagName, perPage, page);\n  dispatch({\n    type: at.FETCH_TAG_POST_LIST,\n    data: postList,\n  });\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport SideBar from 'components/SideBar';\nimport PostList from 'components/PostList';\nimport Header from 'components/Header';\nimport * as TagPostActions from './actions';\nimport { Button } from 'antd';\nimport siteConfig from 'siteConfig';\nimport './style.css';\n\nimport { Grid, Row } from \"react-bootstrap\";\n\nconst mapStateToProps = ({ tagPost }) => ({ tagPost });\n\nconst mapDispatchToProps = dispatch => ({\n  tagPostActions: bindActionCreators(TagPostActions, dispatch),\n});\n\nexport class TagPost extends Component {\n  static propTypes = {\n    tagPost: PropTypes.object.isRequired,\n    tagPostActions: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.perPage = 20;\n  }\n\n  componentDidMount() {\n    this.props.tagPostActions.fetchPostInfo();\n\n    const { tagName } = this.props.match.params;\n    this.props.tagPostActions.setTagName(tagName);\n    this._loadPage(1);\n  }\n\n  componentDidUpdate(prevProps) {\n    let oldTag = prevProps.match.params.tagName;\n    let newTag = this.props.match.params.tagName;\n\n    if (newTag !== oldTag) {\n      this.props.tagPostActions.setTagName(newTag);\n      this._loadPage(1);\n    }\n  }\n\n  _loadPage(pageNum) {\n    const { tagName } = this.props.match.params;\n    this.props.tagPostActions.fetchTagPostList(tagName, this.perPage, pageNum);\n\n    this.pageNum = pageNum;\n  }\n\n  render() {\n    const { tagName } = this.props.match.params;\n\n    const {\n      postInfo: { postCount, tagInfo },\n      postList,\n      loadMore,\n    } = this.props.tagPost.toJS();\n\n    const navList = [\n      {\n        linkTo: '/dashboard',\n        tag: `Dashboard`\n      },\n      {\n        linkTo: '/',\n        tag: `All Build History（${postCount}）`,\n      },\n      ...tagInfo,\n    ];\n\n    const loadMoreBtn = loadMore\n      ? <Button\n          size=\"large\"\n          className=\"load-more\"\n          onClick={() => this._loadPage(this.pageNum + 1)}>\n          Load More\n        </Button>\n      : false;\n\n    return (\n      <div className=\"page-container\">\n        <SideBar data={siteConfig} />\n        <div className=\"post-list\">\n          <Header data={navList} activeTag={tagName} />\n          <div className=\"content\">\n            <Grid fluid>\n              <Row>\n              <PostList goHome data={postList} />\n              </Row>\n            </Grid>\n          </div>\n          {loadMoreBtn}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TagPost);\n"],"sourceRoot":""}